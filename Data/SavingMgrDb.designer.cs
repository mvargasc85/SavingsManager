#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SavingsManager.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SavingsManagerDB")]
	public partial class SavingMgrDbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAhorro(Ahorro instance);
    partial void UpdateAhorro(Ahorro instance);
    partial void DeleteAhorro(Ahorro instance);
    partial void InsertPlan(Plan instance);
    partial void UpdatePlan(Plan instance);
    partial void DeletePlan(Plan instance);
    partial void InsertSocio(Socio instance);
    partial void UpdateSocio(Socio instance);
    partial void DeleteSocio(Socio instance);
    partial void InsertPlanesSocio(PlanesSocio instance);
    partial void UpdatePlanesSocio(PlanesSocio instance);
    partial void DeletePlanesSocio(PlanesSocio instance);
    partial void InsertGrupo(Grupo instance);
    partial void UpdateGrupo(Grupo instance);
    partial void DeleteGrupo(Grupo instance);
    #endregion
		
		public SavingMgrDbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SavingsManagerDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SavingMgrDbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SavingMgrDbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SavingMgrDbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SavingMgrDbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ahorro> Ahorro
		{
			get
			{
				return this.GetTable<Ahorro>();
			}
		}
		
		public System.Data.Linq.Table<Plan> Plan
		{
			get
			{
				return this.GetTable<Plan>();
			}
		}
		
		public System.Data.Linq.Table<Socio> Socio
		{
			get
			{
				return this.GetTable<Socio>();
			}
		}
		
		public System.Data.Linq.Table<PlanesSocio> PlanesSocio
		{
			get
			{
				return this.GetTable<PlanesSocio>();
			}
		}
		
		public System.Data.Linq.Table<Grupo> Grupo
		{
			get
			{
				return this.GetTable<Grupo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ahorro")]
	public partial class Ahorro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idpago;
		
		private int _IdPlan;
		
		private int _IdSocio;
		
		private System.DateTime _Fecha;
		
		private decimal _MontoCuota;
		
		private char _Estado;
		
		private EntityRef<Plan> _Plan;
		
		private EntityRef<Socio> _Socio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidpagoChanging(int value);
    partial void OnidpagoChanged();
    partial void OnIdPlanChanging(int value);
    partial void OnIdPlanChanged();
    partial void OnIdSocioChanging(int value);
    partial void OnIdSocioChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnMontoCuotaChanging(decimal value);
    partial void OnMontoCuotaChanged();
    partial void OnEstadoChanging(char value);
    partial void OnEstadoChanged();
    #endregion
		
		public Ahorro()
		{
			this._Plan = default(EntityRef<Plan>);
			this._Socio = default(EntityRef<Socio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idpago", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idpago
		{
			get
			{
				return this._idpago;
			}
			set
			{
				if ((this._idpago != value))
				{
					this.OnidpagoChanging(value);
					this.SendPropertyChanging();
					this._idpago = value;
					this.SendPropertyChanged("idpago");
					this.OnidpagoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPlan", DbType="Int NOT NULL")]
		public int IdPlan
		{
			get
			{
				return this._IdPlan;
			}
			set
			{
				if ((this._IdPlan != value))
				{
					if (this._Plan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPlanChanging(value);
					this.SendPropertyChanging();
					this._IdPlan = value;
					this.SendPropertyChanged("IdPlan");
					this.OnIdPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSocio", DbType="Int NOT NULL")]
		public int IdSocio
		{
			get
			{
				return this._IdSocio;
			}
			set
			{
				if ((this._IdSocio != value))
				{
					if (this._Socio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSocioChanging(value);
					this.SendPropertyChanging();
					this._IdSocio = value;
					this.SendPropertyChanged("IdSocio");
					this.OnIdSocioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MontoCuota", DbType="Decimal(18,0) NOT NULL")]
		public decimal MontoCuota
		{
			get
			{
				return this._MontoCuota;
			}
			set
			{
				if ((this._MontoCuota != value))
				{
					this.OnMontoCuotaChanging(value);
					this.SendPropertyChanging();
					this._MontoCuota = value;
					this.SendPropertyChanged("MontoCuota");
					this.OnMontoCuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="NChar(1) NOT NULL")]
		public char Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plan_Ahorro", Storage="_Plan", ThisKey="IdPlan", OtherKey="IdPlan", IsForeignKey=true)]
		public Plan Plan
		{
			get
			{
				return this._Plan.Entity;
			}
			set
			{
				Plan previousValue = this._Plan.Entity;
				if (((previousValue != value) 
							|| (this._Plan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plan.Entity = null;
						previousValue.Ahorro.Remove(this);
					}
					this._Plan.Entity = value;
					if ((value != null))
					{
						value.Ahorro.Add(this);
						this._IdPlan = value.IdPlan;
					}
					else
					{
						this._IdPlan = default(int);
					}
					this.SendPropertyChanged("Plan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Socio_Ahorro", Storage="_Socio", ThisKey="IdSocio", OtherKey="IdSocio", IsForeignKey=true)]
		public Socio Socio
		{
			get
			{
				return this._Socio.Entity;
			}
			set
			{
				Socio previousValue = this._Socio.Entity;
				if (((previousValue != value) 
							|| (this._Socio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Socio.Entity = null;
						previousValue.Ahorro.Remove(this);
					}
					this._Socio.Entity = value;
					if ((value != null))
					{
						value.Ahorro.Add(this);
						this._IdSocio = value.IdSocio;
					}
					else
					{
						this._IdSocio = default(int);
					}
					this.SendPropertyChanged("Socio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Plan]")]
	public partial class Plan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPlan;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private int _Duracion;
		
		private char _Periodicidad;
		
		private decimal _MontoCuota;
		
		private System.DateTime _FechaInicial;
		
		private System.DateTime _FechaFinal;
		
		private EntitySet<Ahorro> _Ahorro;
		
		private EntitySet<PlanesSocio> _PlanesSocio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPlanChanging(int value);
    partial void OnIdPlanChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnDuracionChanging(int value);
    partial void OnDuracionChanged();
    partial void OnPeriodicidadChanging(char value);
    partial void OnPeriodicidadChanged();
    partial void OnMontoCuotaChanging(decimal value);
    partial void OnMontoCuotaChanged();
    partial void OnFechaInicialChanging(System.DateTime value);
    partial void OnFechaInicialChanged();
    partial void OnFechaFinalChanging(System.DateTime value);
    partial void OnFechaFinalChanged();
    #endregion
		
		public Plan()
		{
			this._Ahorro = new EntitySet<Ahorro>(new Action<Ahorro>(this.attach_Ahorro), new Action<Ahorro>(this.detach_Ahorro));
			this._PlanesSocio = new EntitySet<PlanesSocio>(new Action<PlanesSocio>(this.attach_PlanesSocio), new Action<PlanesSocio>(this.detach_PlanesSocio));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPlan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPlan
		{
			get
			{
				return this._IdPlan;
			}
			set
			{
				if ((this._IdPlan != value))
				{
					this.OnIdPlanChanging(value);
					this.SendPropertyChanging();
					this._IdPlan = value;
					this.SendPropertyChanged("IdPlan");
					this.OnIdPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duracion", DbType="Int NOT NULL")]
		public int Duracion
		{
			get
			{
				return this._Duracion;
			}
			set
			{
				if ((this._Duracion != value))
				{
					this.OnDuracionChanging(value);
					this.SendPropertyChanging();
					this._Duracion = value;
					this.SendPropertyChanged("Duracion");
					this.OnDuracionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Periodicidad", DbType="Char(1) NOT NULL")]
		public char Periodicidad
		{
			get
			{
				return this._Periodicidad;
			}
			set
			{
				if ((this._Periodicidad != value))
				{
					this.OnPeriodicidadChanging(value);
					this.SendPropertyChanging();
					this._Periodicidad = value;
					this.SendPropertyChanged("Periodicidad");
					this.OnPeriodicidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MontoCuota", DbType="Decimal(18,0) NOT NULL")]
		public decimal MontoCuota
		{
			get
			{
				return this._MontoCuota;
			}
			set
			{
				if ((this._MontoCuota != value))
				{
					this.OnMontoCuotaChanging(value);
					this.SendPropertyChanging();
					this._MontoCuota = value;
					this.SendPropertyChanged("MontoCuota");
					this.OnMontoCuotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicial", DbType="DateTime NOT NULL")]
		public System.DateTime FechaInicial
		{
			get
			{
				return this._FechaInicial;
			}
			set
			{
				if ((this._FechaInicial != value))
				{
					this.OnFechaInicialChanging(value);
					this.SendPropertyChanging();
					this._FechaInicial = value;
					this.SendPropertyChanged("FechaInicial");
					this.OnFechaInicialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFinal", DbType="DateTime NOT NULL")]
		public System.DateTime FechaFinal
		{
			get
			{
				return this._FechaFinal;
			}
			set
			{
				if ((this._FechaFinal != value))
				{
					this.OnFechaFinalChanging(value);
					this.SendPropertyChanging();
					this._FechaFinal = value;
					this.SendPropertyChanged("FechaFinal");
					this.OnFechaFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plan_Ahorro", Storage="_Ahorro", ThisKey="IdPlan", OtherKey="IdPlan")]
		public EntitySet<Ahorro> Ahorro
		{
			get
			{
				return this._Ahorro;
			}
			set
			{
				this._Ahorro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plan_PlanesSocio", Storage="_PlanesSocio", ThisKey="IdPlan", OtherKey="IdPlan")]
		public EntitySet<PlanesSocio> PlanesSocio
		{
			get
			{
				return this._PlanesSocio;
			}
			set
			{
				this._PlanesSocio.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ahorro(Ahorro entity)
		{
			this.SendPropertyChanging();
			entity.Plan = this;
		}
		
		private void detach_Ahorro(Ahorro entity)
		{
			this.SendPropertyChanging();
			entity.Plan = null;
		}
		
		private void attach_PlanesSocio(PlanesSocio entity)
		{
			this.SendPropertyChanging();
			entity.Plan = this;
		}
		
		private void detach_PlanesSocio(PlanesSocio entity)
		{
			this.SendPropertyChanging();
			entity.Plan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Socio")]
	public partial class Socio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSocio;
		
		private string _Nombre;
		
		private string _Apellido1;
		
		private string _Apellido2;
		
		private string _Email;
		
		private int _IdGrupo;
		
		private EntitySet<Ahorro> _Ahorro;
		
		private EntitySet<PlanesSocio> _PlanesSocio;
		
		private EntityRef<Grupo> _Grupo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSocioChanging(int value);
    partial void OnIdSocioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellido1Changing(string value);
    partial void OnApellido1Changed();
    partial void OnApellido2Changing(string value);
    partial void OnApellido2Changed();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIdGrupoChanging(int value);
    partial void OnIdGrupoChanged();
    #endregion
		
		public Socio()
		{
			this._Ahorro = new EntitySet<Ahorro>(new Action<Ahorro>(this.attach_Ahorro), new Action<Ahorro>(this.detach_Ahorro));
			this._PlanesSocio = new EntitySet<PlanesSocio>(new Action<PlanesSocio>(this.attach_PlanesSocio), new Action<PlanesSocio>(this.detach_PlanesSocio));
			this._Grupo = default(EntityRef<Grupo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSocio", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSocio
		{
			get
			{
				return this._IdSocio;
			}
			set
			{
				if ((this._IdSocio != value))
				{
					this.OnIdSocioChanging(value);
					this.SendPropertyChanging();
					this._IdSocio = value;
					this.SendPropertyChanged("IdSocio");
					this.OnIdSocioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellido1
		{
			get
			{
				return this._Apellido1;
			}
			set
			{
				if ((this._Apellido1 != value))
				{
					this.OnApellido1Changing(value);
					this.SendPropertyChanging();
					this._Apellido1 = value;
					this.SendPropertyChanged("Apellido1");
					this.OnApellido1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido2", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Apellido2
		{
			get
			{
				return this._Apellido2;
			}
			set
			{
				if ((this._Apellido2 != value))
				{
					this.OnApellido2Changing(value);
					this.SendPropertyChanging();
					this._Apellido2 = value;
					this.SendPropertyChanged("Apellido2");
					this.OnApellido2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGrupo", DbType="Int NOT NULL")]
		public int IdGrupo
		{
			get
			{
				return this._IdGrupo;
			}
			set
			{
				if ((this._IdGrupo != value))
				{
					if (this._Grupo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdGrupoChanging(value);
					this.SendPropertyChanging();
					this._IdGrupo = value;
					this.SendPropertyChanged("IdGrupo");
					this.OnIdGrupoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Socio_Ahorro", Storage="_Ahorro", ThisKey="IdSocio", OtherKey="IdSocio")]
		public EntitySet<Ahorro> Ahorro
		{
			get
			{
				return this._Ahorro;
			}
			set
			{
				this._Ahorro.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Socio_PlanesSocio", Storage="_PlanesSocio", ThisKey="IdSocio", OtherKey="IdSocio")]
		public EntitySet<PlanesSocio> PlanesSocio
		{
			get
			{
				return this._PlanesSocio;
			}
			set
			{
				this._PlanesSocio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupo_Socio", Storage="_Grupo", ThisKey="IdGrupo", OtherKey="IdGrupo", IsForeignKey=true)]
		public Grupo Grupo
		{
			get
			{
				return this._Grupo.Entity;
			}
			set
			{
				Grupo previousValue = this._Grupo.Entity;
				if (((previousValue != value) 
							|| (this._Grupo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupo.Entity = null;
						previousValue.Socio.Remove(this);
					}
					this._Grupo.Entity = value;
					if ((value != null))
					{
						value.Socio.Add(this);
						this._IdGrupo = value.IdGrupo;
					}
					else
					{
						this._IdGrupo = default(int);
					}
					this.SendPropertyChanged("Grupo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ahorro(Ahorro entity)
		{
			this.SendPropertyChanging();
			entity.Socio = this;
		}
		
		private void detach_Ahorro(Ahorro entity)
		{
			this.SendPropertyChanging();
			entity.Socio = null;
		}
		
		private void attach_PlanesSocio(PlanesSocio entity)
		{
			this.SendPropertyChanging();
			entity.Socio = this;
		}
		
		private void detach_PlanesSocio(PlanesSocio entity)
		{
			this.SendPropertyChanging();
			entity.Socio = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PlanesSocio")]
	public partial class PlanesSocio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPlan;
		
		private int _IdSocio;
		
		private EntityRef<Plan> _Plan;
		
		private EntityRef<Socio> _Socio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPlanChanging(int value);
    partial void OnIdPlanChanged();
    partial void OnIdSocioChanging(int value);
    partial void OnIdSocioChanged();
    #endregion
		
		public PlanesSocio()
		{
			this._Plan = default(EntityRef<Plan>);
			this._Socio = default(EntityRef<Socio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPlan", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdPlan
		{
			get
			{
				return this._IdPlan;
			}
			set
			{
				if ((this._IdPlan != value))
				{
					if (this._Plan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdPlanChanging(value);
					this.SendPropertyChanging();
					this._IdPlan = value;
					this.SendPropertyChanged("IdPlan");
					this.OnIdPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSocio", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdSocio
		{
			get
			{
				return this._IdSocio;
			}
			set
			{
				if ((this._IdSocio != value))
				{
					if (this._Socio.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSocioChanging(value);
					this.SendPropertyChanging();
					this._IdSocio = value;
					this.SendPropertyChanged("IdSocio");
					this.OnIdSocioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Plan_PlanesSocio", Storage="_Plan", ThisKey="IdPlan", OtherKey="IdPlan", IsForeignKey=true)]
		public Plan Plan
		{
			get
			{
				return this._Plan.Entity;
			}
			set
			{
				Plan previousValue = this._Plan.Entity;
				if (((previousValue != value) 
							|| (this._Plan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Plan.Entity = null;
						previousValue.PlanesSocio.Remove(this);
					}
					this._Plan.Entity = value;
					if ((value != null))
					{
						value.PlanesSocio.Add(this);
						this._IdPlan = value.IdPlan;
					}
					else
					{
						this._IdPlan = default(int);
					}
					this.SendPropertyChanged("Plan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Socio_PlanesSocio", Storage="_Socio", ThisKey="IdSocio", OtherKey="IdSocio", IsForeignKey=true)]
		public Socio Socio
		{
			get
			{
				return this._Socio.Entity;
			}
			set
			{
				Socio previousValue = this._Socio.Entity;
				if (((previousValue != value) 
							|| (this._Socio.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Socio.Entity = null;
						previousValue.PlanesSocio.Remove(this);
					}
					this._Socio.Entity = value;
					if ((value != null))
					{
						value.PlanesSocio.Add(this);
						this._IdSocio = value.IdSocio;
					}
					else
					{
						this._IdSocio = default(int);
					}
					this.SendPropertyChanged("Socio");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grupo")]
	public partial class Grupo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdGrupo;
		
		private string _Nombre;
		
		private System.DateTime _Fecha_Creacion;
		
		private string _Descripcion;
		
		private EntitySet<Socio> _Socio;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdGrupoChanging(int value);
    partial void OnIdGrupoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnFecha_CreacionChanging(System.DateTime value);
    partial void OnFecha_CreacionChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Grupo()
		{
			this._Socio = new EntitySet<Socio>(new Action<Socio>(this.attach_Socio), new Action<Socio>(this.detach_Socio));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGrupo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdGrupo
		{
			get
			{
				return this._IdGrupo;
			}
			set
			{
				if ((this._IdGrupo != value))
				{
					this.OnIdGrupoChanging(value);
					this.SendPropertyChanging();
					this._IdGrupo = value;
					this.SendPropertyChanged("IdGrupo");
					this.OnIdGrupoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_Creacion", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha_Creacion
		{
			get
			{
				return this._Fecha_Creacion;
			}
			set
			{
				if ((this._Fecha_Creacion != value))
				{
					this.OnFecha_CreacionChanging(value);
					this.SendPropertyChanging();
					this._Fecha_Creacion = value;
					this.SendPropertyChanged("Fecha_Creacion");
					this.OnFecha_CreacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupo_Socio", Storage="_Socio", ThisKey="IdGrupo", OtherKey="IdGrupo")]
		public EntitySet<Socio> Socio
		{
			get
			{
				return this._Socio;
			}
			set
			{
				this._Socio.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Socio(Socio entity)
		{
			this.SendPropertyChanging();
			entity.Grupo = this;
		}
		
		private void detach_Socio(Socio entity)
		{
			this.SendPropertyChanging();
			entity.Grupo = null;
		}
	}
}
#pragma warning restore 1591
